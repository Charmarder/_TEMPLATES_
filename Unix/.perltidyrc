###############################################################################
# This is a perltidy configuration file (.perltidyrc for Unix/Windows, perltidy.ini for Windows) 
# 
# For Windows you can put file to $VIM/vim81
#
# A handy command to know when you start using a configuration file and where perltidy will looking for it is
#   perltidy -dpro
# Others useful include: 
#   -h, which dumps help information
#   -v, which dumps the version number
#
# A Brief Perltidy Tutorial: http://perltidy.sourceforge.net/tutorial.html
# Perltidy Style Key: http://perltidy.sourceforge.net/stylekey.html
# For complete information see the perltidy manual http://perltidy.sourceforge.net/perltidy.html. Or 'man perltidy'.
# 
###############################################################################

# I/O control

# Basic Options:
 -ole=unix      # specify output line ending (s=dos or win, mac, unix)

# Whitespace Control
# -bt=n          # --brace-tightness=n sets brace '{}' tightness, n= (0 = loose, 1=default, 2 = tight)
# -bbt           # --block-brace-tightness=n same as -bt but for code block braces; same as -bt if not given
 -pt=2          # --paren-tightness=n paren '()' tightness (n=0, 1 or 2)
# -sbt=n         # --square-bracket-tightness=n square bracket tightness (n=0, 1, or 2)
 -nsfs          # --space-for-semicolon add space before semicolon in for( ; ; ). Use -nsfs or --nospace-for-semicolon to deactivate it.


# Line Break Control
 -ce            # cuddled else; use this style: '} else {'
 -l=140         # maximum line length;  default n=80

# Following Old Breakpoints

# Comment controls
 -isbc          #  --indent-spaced-block-comments indent spaced block comments; may indent unless no leading space

# Delete selected text

# Send selected text to a '.TEE' file

# Outdenting
 -nolq          # outdent long quoted strings (default).  To prevent such out-denting, use -nolq or --nooutdent-long-lines.

# Other controls

# Combinations of other parameters

# Dump and die, debugging

# HTML

